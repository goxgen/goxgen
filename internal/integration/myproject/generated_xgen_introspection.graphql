type XgenIntrospection {
  annotation: XgenAnnotationMap
  object: XgenObjectMap
  resource: XgenResourceMap
}
"""This directive is used to mark the object as a resource action"""
type Action {
  Resource: String!
  Action: XgenResourceActionType!
  Route: String
  SchemaFieldName: String
}
"""This directive is used to mark the object as a resource list action"""
type ListAction {
  Resource: String!
  Action: XgenResourceListActionType!
  Route: String
  Pagination: Boolean
  SchemaFieldName: String
}
"""This directive is used to mark the object as a resource field"""
type Field {
  Label: String
  Description: String
}
"""This directive is used to mark the object as a resource field"""
type ActionField {
  Label: String
  Description: String
}
"""This directive is used to mark the object as a resource"""
type Resource {
  Name: String!
  Route: String
  Primary: Boolean
}
type XgenAnnotationMap {
  Resource: [ResourceAnnotationSingle!]!
  Action: [ActionAnnotationSingle!]!
  ListAction: [ListActionAnnotationSingle!]!
}
type ResourceAnnotationSingle {
  name: String
  value: Resource
}
type ActionAnnotationSingle {
  name: String
  value: Action
}
type ListActionAnnotationSingle {
  name: String
  value: ListAction
}
type XgenFieldDef {
  Field: Field
  ActionField: ActionField
}
type XgenObjectDefinition {
  ListAction: ListAction
  Action: Action
  Resource: Resource
}
type XgenObjectField {
  name: String
  definition: XgenFieldDef
}
type XgenObjectMap {
  XgenResourceFieldDbConfigInput: XgenResourceFieldDbConfigInputXgenDef
  ListTodo: ListTodoXgenDef
  XgenResourceDbConfigInput: XgenResourceDbConfigInputXgenDef
  Todo: TodoXgenDef
  CustomTodo: CustomTodoXgenDef
  UpdateTodo: UpdateTodoXgenDef
  UpdateUser: UpdateUserXgenDef
  XgenPaginationInput: XgenPaginationInputXgenDef
  XgenResourceActionType: XgenResourceActionTypeXgenDef
  User: UserXgenDef
  NewUser: NewUserXgenDef
  UserList: UserListXgenDef
  XgenCursorPaginationInput: XgenCursorPaginationInputXgenDef
  XgenResourceListActionType: XgenResourceListActionTypeXgenDef
  DeleteTodo: DeleteTodoXgenDef
  NewTodo: NewTodoXgenDef
}
type XgenResourceFieldDbConfigInputXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type ListTodoXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type XgenResourceDbConfigInputXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type TodoXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type CustomTodoXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type UpdateTodoXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type UpdateUserXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type XgenPaginationInputXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type XgenResourceActionTypeXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type UserXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type NewUserXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type UserListXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type XgenCursorPaginationInputXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type XgenResourceListActionTypeXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type DeleteTodoXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type NewTodoXgenDef {
  object: XgenObjectDefinition
  field: [XgenObjectField!]!
}
type XgenResourceMap {
  todo: XgenResourceDefinition
  user: XgenResourceDefinition
}
type XgenResourceDefinition {
  objectName: String
  properties: XgenResourceProperty
  actions: [XgenResourceAction]!
}
type XgenResourceProperty {
  Name: String!
  Route: String
  Primary: Boolean
}
type XgenResourceAction {
  Resource: String!
  Action: XgenResourceActionType!
  Route: String
  SchemaFieldName: String
}
extend type Query {
  _xgen_introspection: XgenIntrospection
}
extend type Query {
  todo_browse(input: ListTodo, pagination: XgenPaginationInput): [Todo]!
  user_browse(input: UserList, pagination: XgenPaginationInput): [User]!
}
extend type Mutation {
  new_todo(input: NewTodo): Todo
  user_update(input: UpdateUser): User
  user_create(input: NewUser): User
  todo_delete(input: DeleteTodo): Todo
  todo_custom(input: CustomTodo): Todo
  todo_update(input: UpdateTodo): Todo
}