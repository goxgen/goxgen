// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package generated

import (
	"fmt"
	"io"
	"strconv"

	"gorm.io/gorm"
)

// This directive is used to mark the object as a resource action
type Action struct {
	Resource        string                 `json:"Resource" gorm:""`
	Action          XgenResourceActionType `json:"Action" gorm:""`
	Route           *string                `json:"Route,omitempty" gorm:""`
	SchemaFieldName *string                `json:"SchemaFieldName,omitempty" gorm:""`
}

type ActionAnnotationSingle struct {
	Name  *string `json:"name,omitempty" gorm:""`
	Value *Action `json:"value,omitempty" gorm:""`
}

// This directive is used to mark the object as a resource field
type ActionField struct {
	Label       *string `json:"Label,omitempty" gorm:""`
	Description *string `json:"Description,omitempty" gorm:""`
	// Map field to resource field, {resource}.{field}, eg. user.id
	MapTo []string `json:"MapTo,omitempty" gorm:""`
}

type Car struct {
	ID          int    `json:"id" gorm:"column:id;primaryKey;"`
	Make        string `json:"make" gorm:"column:make;"`
	Done        bool   `json:"done" gorm:"column:done;"`
	User        *User  `json:"user" gorm:""`
	UserID      int    ``
	*gorm.Model ``
}

type CarBrowseInput struct {
	ID     *int    `json:"id,omitempty" mapto:"" gorm:""`
	UserID *int    `json:"userId,omitempty" mapto:"" gorm:""`
	Make   *string `json:"make,omitempty" mapto:"" gorm:""`
}

type CarBrowseInputXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type CarInput struct {
	ID   *int       `json:"id,omitempty" mapto:"Car.ID" gorm:""`
	Make *string    `json:"make,omitempty" mapto:"Car.Make" gorm:""`
	Done *bool      `json:"done,omitempty" mapto:"Car.Done" gorm:""`
	User *UserInput `json:"user,omitempty" mapto:"Car.User" gorm:""`
}

type CarInputXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type CarXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type DeleteUsers struct {
	Ids []int `json:"ids,omitempty" mapto:"" gorm:""`
}

type DeleteUsersXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

// This directive is used to mark the object as a resource field
type Field struct {
	Label       *string `json:"Label,omitempty" gorm:""`
	Description *string `json:"Description,omitempty" gorm:""`
}

// This directive is used to mark the object as a resource list action
type ListAction struct {
	Resource        string                     `json:"Resource" gorm:""`
	Action          XgenResourceListActionType `json:"Action" gorm:""`
	Route           *string                    `json:"Route,omitempty" gorm:""`
	Pagination      *bool                      `json:"Pagination,omitempty" gorm:""`
	SchemaFieldName *string                    `json:"SchemaFieldName,omitempty" gorm:""`
}

type ListActionAnnotationSingle struct {
	Name  *string     `json:"name,omitempty" gorm:""`
	Value *ListAction `json:"value,omitempty" gorm:""`
}

type ListUser struct {
	ID   *int    `json:"id,omitempty" mapto:"User.ID" gorm:""`
	Name *string `json:"name,omitempty" mapto:"User.Name" gorm:""`
}

type ListUserXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type Phone struct {
	ID          int    `json:"id" gorm:"column:id;primaryKey;"`
	Number      string `json:"number" gorm:"column:number;"`
	User        *User  `json:"user" gorm:""`
	UserID      int    ``
	*gorm.Model ``
}

type PhoneNumberBrowseInput struct {
	ID     *int `json:"id,omitempty" mapto:"Phone.ID" gorm:""`
	Number *int `json:"number,omitempty" mapto:"Phone.Number" gorm:""`
}

type PhoneNumberBrowseInputXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type PhoneNumberInput struct {
	ID     *int       `json:"id,omitempty" mapto:"Phone.ID" gorm:""`
	Number *string    `json:"number,omitempty" mapto:"Phone.Number" gorm:""`
	User   *UserInput `json:"user,omitempty" mapto:"Phone.User" gorm:""`
}

type PhoneNumberInputXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type PhoneXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

// This directive is used to mark the object as a resource
type Resource struct {
	Name    string  `json:"Name" gorm:""`
	Route   *string `json:"Route,omitempty" gorm:""`
	Primary *bool   `json:"Primary,omitempty" gorm:""`
}

type ResourceAnnotationSingle struct {
	Name  *string   `json:"name,omitempty" gorm:""`
	Value *Resource `json:"value,omitempty" gorm:""`
}

type User struct {
	ID           int      `json:"id" gorm:"column:id;primaryKey;"`
	Name         string   `json:"name" gorm:"column:name;unique;"`
	Cars         []*Car   `json:"cars" gorm:""`
	PhoneNumbers []*Phone `json:"phoneNumbers" gorm:""`
	*gorm.Model  ``
}

type UserInput struct {
	ID     *int                `json:"id,omitempty" mapto:"User.ID" gorm:""`
	Name   *string             `json:"name,omitempty" mapto:"User.Name" gorm:""`
	Cars   []*CarInput         `json:"cars,omitempty" mapto:"User.Cars" gorm:""`
	Phones []*PhoneNumberInput `json:"phones,omitempty" mapto:"User.PhoneNumbers" gorm:""`
}

type UserInputXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type UserXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type XgenAnnotationMap struct {
	Action     []*ActionAnnotationSingle     `json:"Action" gorm:""`
	ListAction []*ListActionAnnotationSingle `json:"ListAction" gorm:""`
	Resource   []*ResourceAnnotationSingle   `json:"Resource" gorm:""`
}

type XgenCursorPaginationInput struct {
	First  int     `json:"first" gorm:""`
	After  *string `json:"after,omitempty" gorm:""`
	Last   int     `json:"last" gorm:""`
	Before *string `json:"before,omitempty" gorm:""`
}

type XgenCursorPaginationInputXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type XgenFieldDef struct {
	Field       *Field       `json:"Field,omitempty" gorm:""`
	ActionField *ActionField `json:"ActionField,omitempty" gorm:""`
}

type XgenIntrospection struct {
	Annotation *XgenAnnotationMap `json:"annotation,omitempty" gorm:""`
	Object     *XgenObjectMap     `json:"object,omitempty" gorm:""`
	Resource   *XgenResourceMap   `json:"resource,omitempty" gorm:""`
}

type XgenObjectDefinition struct {
	Resource   *Resource   `json:"Resource,omitempty" gorm:""`
	ListAction *ListAction `json:"ListAction,omitempty" gorm:""`
	Action     *Action     `json:"Action,omitempty" gorm:""`
}

type XgenObjectField struct {
	Name       *string       `json:"name,omitempty" gorm:""`
	Definition *XgenFieldDef `json:"definition,omitempty" gorm:""`
}

type XgenObjectMap struct {
	Car                            *CarXgenDef                            `json:"Car,omitempty" gorm:""`
	ListUser                       *ListUserXgenDef                       `json:"ListUser,omitempty" gorm:""`
	CarInput                       *CarInputXgenDef                       `json:"CarInput,omitempty" gorm:""`
	XgenResourceListActionType     *XgenResourceListActionTypeXgenDef     `json:"XgenResourceListActionType,omitempty" gorm:""`
	UserInput                      *UserInputXgenDef                      `json:"UserInput,omitempty" gorm:""`
	XgenResourceFieldDbConfigInput *XgenResourceFieldDbConfigInputXgenDef `json:"XgenResourceFieldDbConfigInput,omitempty" gorm:""`
	XgenResourceActionType         *XgenResourceActionTypeXgenDef         `json:"XgenResourceActionType,omitempty" gorm:""`
	XgenCursorPaginationInput      *XgenCursorPaginationInputXgenDef      `json:"XgenCursorPaginationInput,omitempty" gorm:""`
	PhoneNumberBrowseInput         *PhoneNumberBrowseInputXgenDef         `json:"PhoneNumberBrowseInput,omitempty" gorm:""`
	Phone                          *PhoneXgenDef                          `json:"Phone,omitempty" gorm:""`
	DeleteUsers                    *DeleteUsersXgenDef                    `json:"DeleteUsers,omitempty" gorm:""`
	XgenPaginationInput            *XgenPaginationInputXgenDef            `json:"XgenPaginationInput,omitempty" gorm:""`
	PhoneNumberInput               *PhoneNumberInputXgenDef               `json:"PhoneNumberInput,omitempty" gorm:""`
	User                           *UserXgenDef                           `json:"User,omitempty" gorm:""`
	CarBrowseInput                 *CarBrowseInputXgenDef                 `json:"CarBrowseInput,omitempty" gorm:""`
	XgenResourceDbConfigInput      *XgenResourceDbConfigInputXgenDef      `json:"XgenResourceDbConfigInput,omitempty" gorm:""`
}

type XgenPaginationInput struct {
	Page int `json:"page" gorm:""`
	Size int `json:"size" gorm:""`
}

type XgenPaginationInputXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type XgenResourceAction struct {
	Resource        string                 `json:"Resource" gorm:""`
	Action          XgenResourceActionType `json:"Action" gorm:""`
	Route           *string                `json:"Route,omitempty" gorm:""`
	SchemaFieldName *string                `json:"SchemaFieldName,omitempty" gorm:""`
}

type XgenResourceActionTypeXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type XgenResourceDbConfigInput struct {
	Table *string `json:"Table,omitempty" gorm:""`
}

type XgenResourceDbConfigInputXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type XgenResourceDefinition struct {
	ObjectName *string               `json:"objectName,omitempty" gorm:""`
	Properties *XgenResourceProperty `json:"properties,omitempty" gorm:""`
	Actions    []*XgenResourceAction `json:"actions" gorm:""`
}

type XgenResourceFieldDbConfigInput struct {
	Column                 *string `json:"Column,omitempty" gorm:""`
	PrimaryKey             *bool   `json:"PrimaryKey,omitempty" gorm:""`
	AutoIncrement          *bool   `json:"AutoIncrement,omitempty" gorm:""`
	Unique                 *bool   `json:"Unique,omitempty" gorm:""`
	NotNull                *bool   `json:"NotNull,omitempty" gorm:""`
	Index                  *bool   `json:"Index,omitempty" gorm:""`
	UniqueIndex            *bool   `json:"UniqueIndex,omitempty" gorm:""`
	Size                   *int    `json:"Size,omitempty" gorm:""`
	Precision              *int    `json:"Precision,omitempty" gorm:""`
	Type                   *string `json:"Type,omitempty" gorm:""`
	Scale                  *int    `json:"Scale,omitempty" gorm:""`
	AutoIncrementIncrement *int    `json:"AutoIncrementIncrement,omitempty" gorm:""`
}

type XgenResourceFieldDbConfigInputXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type XgenResourceListActionTypeXgenDef struct {
	Object *XgenObjectDefinition `json:"object,omitempty" gorm:""`
	Field  []*XgenObjectField    `json:"field" gorm:""`
}

type XgenResourceMap struct {
	PhoneNumber *XgenResourceDefinition `json:"phone_number,omitempty" gorm:""`
	User        *XgenResourceDefinition `json:"user,omitempty" gorm:""`
	Car         *XgenResourceDefinition `json:"car,omitempty" gorm:""`
}

type XgenResourceProperty struct {
	Name    string  `json:"Name" gorm:""`
	Route   *string `json:"Route,omitempty" gorm:""`
	Primary *bool   `json:"Primary,omitempty" gorm:""`
}

type XgenResourceActionType string

const (
	XgenResourceActionTypeCreateMutation XgenResourceActionType = "CREATE_MUTATION"
	XgenResourceActionTypeReadQuery      XgenResourceActionType = "READ_QUERY"
	XgenResourceActionTypeUpdateMutation XgenResourceActionType = "UPDATE_MUTATION"
	XgenResourceActionTypeDeleteMutation XgenResourceActionType = "DELETE_MUTATION"
)

var AllXgenResourceActionType = []XgenResourceActionType{
	XgenResourceActionTypeCreateMutation,
	XgenResourceActionTypeReadQuery,
	XgenResourceActionTypeUpdateMutation,
	XgenResourceActionTypeDeleteMutation,
}

func (e XgenResourceActionType) IsValid() bool {
	switch e {
	case XgenResourceActionTypeCreateMutation, XgenResourceActionTypeReadQuery, XgenResourceActionTypeUpdateMutation, XgenResourceActionTypeDeleteMutation:
		return true
	}
	return false
}

func (e XgenResourceActionType) String() string {
	return string(e)
}

func (e *XgenResourceActionType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = XgenResourceActionType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid XgenResourceActionType", str)
	}
	return nil
}

func (e XgenResourceActionType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type XgenResourceListActionType string

const (
	XgenResourceListActionTypeBrowseQuery         XgenResourceListActionType = "BROWSE_QUERY"
	XgenResourceListActionTypeBatchDeleteMutation XgenResourceListActionType = "BATCH_DELETE_MUTATION"
)

var AllXgenResourceListActionType = []XgenResourceListActionType{
	XgenResourceListActionTypeBrowseQuery,
	XgenResourceListActionTypeBatchDeleteMutation,
}

func (e XgenResourceListActionType) IsValid() bool {
	switch e {
	case XgenResourceListActionTypeBrowseQuery, XgenResourceListActionTypeBatchDeleteMutation:
		return true
	}
	return false
}

func (e XgenResourceListActionType) String() string {
	return string(e)
}

func (e *XgenResourceListActionType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = XgenResourceListActionType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid XgenResourceListActionType", str)
	}
	return nil
}

func (e XgenResourceListActionType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
